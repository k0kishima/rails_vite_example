name: Deploy to ECS

permissions:
  contents: read
  id-token: write
  actions: read

on:
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.PROJECT_NAME }}-github-actions-role
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to AWS ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker image
        id: build-image
        uses: docker/build-push-action@v4
        with:
          context: ./
          file: ./deploy/Dockerfile
          push: true
          tags: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.PROJECT_NAME }}-ecr-repo:latest

      - name: Render task definition from template
        id: render-task-def
        run: envsubst < deploy/taskdef-template.json > taskdef.json
        env:
          IMAGE_URI: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.PROJECT_NAME }}-ecr-repo:latest
          PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}

      - name: Register ECS task definition
        id: register-task-def
        run: |
          TASK_DEF_ARN=$(aws ecs register-task-definition \
            --family ${{ secrets.PROJECT_NAME }}-ecs-task-rails \
            --execution-role-arn arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.PROJECT_NAME }}-ecs-task-execution-role \
            --cli-input-json file://taskdef.json \
            --query 'taskDefinition.taskDefinitionArn' --output text)
          echo "TASK_DEF_ARN=$TASK_DEF_ARN" >> $GITHUB_ENV

      - name: Update ECS service
        run: |
          aws ecs update-service \
            --cluster ${{ secrets.PROJECT_NAME }}-ecs-cluster \
            --service ${{ secrets.PROJECT_NAME }}-ecs-service-rails \
            --task-definition ${{ env.TASK_DEF_ARN }} \
            --force-new-deployment
